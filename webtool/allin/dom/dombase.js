//import { Color32 } from "../image/color.js";
export class Color32 {
    constructor(r, g, b, a = 255) {
        this.values = new Uint8ClampedArray(4);
        this.values[0] = r;
        this.values[1] = g;
        this.values[2] = b;
        this.values[3] = a;
    }
    get R() {
        return this.values[0];
    }
    get G() {
        return this.values[1];
    }
    get B() {
        return this.values[2];
    }
    get A() {
        return this.values[3];
    }
    set R(v) {
        this.values[0] = v;
    }
    set G(v) {
        this.values[1] = v;
    }
    set B(v) {
        this.values[2] = v;
    }
    set A(v) {
        this.values[3] = v;
    }
    static Equal(c, c2) {
        return (c.R == c2.R && c.G == c2.G && c.B == c2.B && c.A == c2.A);
    }
    toString() {
        return `rgba(${this.R},${this.G},${this.B},${this.A})`;
    }
    Clone() {
        return new Color32(this.R, this.G, this.B, this.A);
    }
}
export class BaseElement {
    constructor() {
        this.elems = [];
    }
    Show() {
        this._root.style.visibility = "visible";
    }
    Hide() {
        this._root.style.visibility = "hidden";
    }
    getValue() {
        throw new Error("no value.");
    }
    getRoot() {
        return this._root;
    }
    setBackColor(color) {
        this._root.style.backgroundColor = color.toString();
    }
    AddChild(elem) {
        this._root.appendChild(elem.getRoot());
        this.elems.push(elem);
    }
    RemoveAllChild() {
        for (var i = 0; i < this.elems.length; i++) {
            this.elems[i].getRoot().remove();
        }
        this.elems.splice(0);
    }
    RemoveChild(elem) {
        let i = this.elems.indexOf(elem);
        if (i < 0)
            return;
        this.elems.splice(i, 1);
        elem.getRoot().remove();
    }
    RemoveChildAt(index) {
        let elem = this.elems.splice(index, 1)[0];
        elem.getRoot().remove();
    }
    GetChildCount() {
        return this.elems.length;
    }
    GetChild(index) {
        return this.elems[index];
    }
    Style_Fill() {
        this._root.style.position = "absolute";
        this._root.style.left = "0px";
        this._root.style.top = "0px";
        this._root.style.right = "0px";
        this._root.style.bottom = "0px";
        this._root.style.width = "100%";
        this._root.style.height = "100%";
    }
    Style_Size(width, height) {
        this._root.style.width = width + "px";
        this._root.style.height = height + "px";
    }
    Style_Fix(x, y, width, height) {
        this._root.style.position = "absolute";
        this._root.style.left = x + "px";
        this._root.style.top = y + "px";
        this._root.style.right = "auto";
        this._root.style.bottom = "auto";
        this._root.style.width = width + "px";
        this._root.style.height = height + "px";
    }
}
export class Screen extends BaseElement {
    constructor() {
        super();
        this._root = document.body;
    }
    getRoot() {
        throw new Error("no root.");
    }
}
export class Label extends BaseElement {
    constructor(text = "") {
        super();
        let div = this._root = document.createElement("div");
        this.span = document.createElement("span");
        this.span.textContent = text;
        div.appendChild(this.span);
    }
    getValue() {
        return this.span.innerText;
    }
    getText() {
        return this.span.innerText;
    }
    SetText(text) {
        this.span.innerText = text;
    }
}
export class LabelButton extends BaseElement {
    constructor(text = "") {
        super();
        this.colorBack = new Color32(0, 0, 0, 0);
        this.colorBackDown = new Color32(255, 255, 0);
        this.colorLabel = new Color32(0, 0, 0, 255);
        this.colorLabelDown = new Color32(0, 0, 255, 255);
        let div = this._root = document.createElement("div");
        this.span = document.createElement("span");
        this.span.textContent = text;
        div.appendChild(this.span);
        //this._root.style.position = "absolute";
        div.style.width = "100%";
        div.onmousedown = (e) => {
            div.style.backgroundColor = this.colorBackDown.toString();
            this.span.style.color = this.colorLabelDown.toString();
        };
        div.onmouseup = (e) => {
            div.style.backgroundColor = this.colorBack.toString();
            this.span.style.color = this.colorLabel.toString();
            if (this.onClick != null) {
                this.onClick();
            }
        };
        div.onmouseleave = (e) => {
            div.style.backgroundColor = this.colorBack.toString();
            this.span.style.color = this.colorLabel.toString();
        };
        this.UpdateColor();
    }
    UpdateColor() {
        let div = this._root;
        div.style.backgroundColor = this.colorBack.toString();
        this.span.style.color = this.colorLabel.toString();
    }
    getValue() {
        return this.span.innerText;
    }
    getText() {
        return this.span.innerText;
    }
    SetText(text) {
        this.span.innerText = text;
    }
}
export class Picture extends BaseElement {
    constructor(url = "") {
        super();
        let img = this._root = document.createElement("img");
        //img.style.position = "absolute";
        img.src = url;
    }
    setSrc(url) {
        this._root.src = url;
    }
    Style_Fill() {
        super.Style_Fill();
        this._root.style.objectFit = "cover";
    }
}
export class TextBox extends BaseElement {
    constructor(title, defvalue) {
        super();
        let div = this._root = document.createElement("div");
        this.span = document.createElement("span");
        this.span.textContent = title;
        div.appendChild(this.span);
        this.input = document.createElement("input");
        this.input.value = defvalue;
        this.input.type = "input";
        div.appendChild(this.input);
    }
    setTitle(title) {
        this.span.textContent = title;
    }
    setValue(text) {
        this.input.value = text;
    }
    getValue() {
        return this.input.value;
    }
}
export class Toggle extends BaseElement {
    constructor(title, defvalue = false) {
        super();
        let div = this._root = document.createElement("div");
        this.span = document.createElement("span");
        this.span.textContent = title;
        div.appendChild(this.span);
        this.input = document.createElement("input");
        this.input.checked = defvalue;
        this.input.type = "checkbox";
        div.appendChild(this.input);
    }
    setTitle(title) {
        this.span.textContent = title;
    }
    setValue(value) {
        this.input.checked = value;
    }
    getValue() {
        return this.input.checked;
    }
}
export class Button extends BaseElement {
    constructor(title, click = null) {
        super();
        let btn = this._root = document.createElement("button");
        btn.innerText = title;
        btn.onclick = click;
    }
    SetText(value) {
        this._root.textContent = value;
    }
    SetClickEvent(click) {
        this._root.onclick = click;
    }
}
export class Space extends BaseElement {
    constructor(width = 32) {
        super();
        this._root = document.createElement("span");
        this._root.style.width = width + "px";
        this._root.style.display = "inline-flex";
    }
}
export class Panel extends BaseElement {
    constructor() {
        super();
        let div = this._root = document.createElement("div");
        //div.style.position = "absolute";
        div.style.border = "1px solid";
        div.style.borderColor = "#fff";
        div.style.color = "#fff";
        div.style.left = "0px";
        div.style.right = "0px";
        div.style.top = "0px";
        div.style.bottom = "0px";
    }
    SetBorder(width) {
        let div = this._root;
        div.style.border = width + "px solid";
    }
    SetVCenter() {
        let div = this._root;
        div.style.top = "50%";
        div.style.position = "relative";
        div.style.transform = "translateY(-50%)";
    }
    UseScrollV() {
        let div = this._root;
        div.style.overflowY = "scroll";
    }
    UseScrollH() {
        let div = this._root;
        div.style.overflowX = "scroll";
    }
}
//# sourceMappingURL=data:application/json;base64,